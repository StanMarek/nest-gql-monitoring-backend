# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User implements BaseSchema {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
  role: Role!
}

interface BaseSchema {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum Role {
  CLIENT_USER
  CLIENT_ADMIN
  ADMIN
}

type Authorization {
  token: String!
  expiresIn: Int!
}

type ReportEnvironment {
  h: Int!
  t: Int!
  hAvg: Int!
  tAvg: Int!
  hMax: Int!
  tMax: Int!
  hMin: Int!
  tMin: Int!
}

type ReportMic {
  alarm1Cnt: Int!
  alarm2Cnt: Int!
  alarmAl1Cnt: Int!
  alarmAl2Cnt: Int!
  avgDb: Int!
  maxDb: Int!
  micTamer: Int!
  noiseLvlDb: Int!
}

type ReportPirsensor {
  cnt: Int!
  time: Int!
}

type ReportLight {
  light: Int!
}

type Report {
  environment: ReportEnvironment!
  mic: ReportMic!
  pirsensor: ReportPirsensor!
  lightsensor: ReportLight!
  date: DateTime!
  device: String!
}

type Location implements BaseSchema {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  zone: String
  city: String!
  country: String!
  address: String!
  code: String!
  user: User!
  reports: [Report!]!
}

type EnvConfig {
  env_hmax2: Int!
  env_hmax1: Int!
  env_alarm1_flag: Int!
  env_tmax1: Int!
  env_tmin1: Int!
  env_tmax2: Int!
  env_hmin2: Int!
  env_rap_limit: Int!
  env_ivl: Int!
  env_tmin2: Int!
  env_hmin1: Int!
}

type MicConfig {
  mic_alarm1_flag: Int!
  mic_lvl2: Int!
  mic_lvl1: Int!
  mic_alarm2_flag: Int!
  mic_time2: Int!
  mic_time1: Int!
  mic_rap_limit: Int!
  mic_al1_set: Int!
  mic_al1_flag: Int!
  mic_ivl: Int!
  mic_al2_flag: Int!
}

type LightConfig {
  light_ivl: Int!
  light_rap_limit: Int!
}

type MoveConfig {
  move_async_rep: Int!
  move_min_time: Int!
  move_ivl: Int!
  move_rap_limit: Int!
}

type SystemConfig {
  led_light1: Int!
  buzz_vol1: Int!
  heartbeat_ivl: Int!
  pwr_mode: Int!
  buzz_vol2: Int!
  led_time1: Int!
  wifi_mode: Int!
  buzz_time1: Int!
  led_time2: Int!
  led_light2: Int!
  buzz_time2: Int!
}

type DeviceConfig {
  timestamp: Float!
  env: EnvConfig!
  mic: MicConfig!
  light: LightConfig!
  move: MoveConfig!
  system: SystemConfig!
}

type Diagnostic {
  bssid: String!
  rssi: Int!
  uptime: Int!
  conUptime: Int!
  configId: Int!
  errorFlag: Int!
  fw: String!
  memFree: Int!
  powerMode: Int!
  temperature: Int!
  date: DateTime!
}

type Device implements BaseSchema {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  currentVersion: String!
  latestVersion: String!
  serial: String!
  user: User
  config: DeviceConfig!
  location: Location
  isActive: Boolean!
  diagnostics: [Diagnostic!]!
}

type Query {
  users: [User!]!
  user(id: String!): User!
  devices: [Device!]!
  device(id: String!): Device!
  locations: [Location!]!
  location(id: String!): Location!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User!
  signIn(signIn: SignInInput!): Authorization!
  signUp(signUp: SignUpInput!): User!
  createDevice(createDeviceInput: CreateDeviceInput!): Device!
  updateDevice(updateDeviceInput: UpdateDeviceInput!): Device!
  setDeviceConfig(setDeviceConfigInput: SetDeviceConfigInput!): Device!
  registerDevice(serial: String!): Device!
  assignDeviceLocation(assignDeviceLocationInput: AssignDeviceLocationInput!): Device!
  removeDevice(id: String!): Device!
  createLocation(createLocationInput: CreateLocationInput!): Location!
  updateLocation(updateLocationInput: UpdateLocationInput!): Location!
  removeLocation(id: String!): Location!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
  password: String!
  role: String = "CLIENT_USER"
}

input UpdateUserInput {
  firstName: String
  lastName: String
  email: String
  phone: String
  password: String
  role: String = "CLIENT_USER"
  id: String!
}

input SignInInput {
  email: String!
  password: String!
}

input SignUpInput {
  firstName: String!
  lastName: String!
  email: String!
  phone: String!
  password1: String!
  password2: String!
}

input CreateDeviceInput {
  """Default version of device"""
  version: String!

  """Unique device identifier"""
  serial: String!
}

input UpdateDeviceInput {
  id: String!
  currentVersion: String
  latestVersion: String
}

input SetDeviceConfigInput {
  id: String!
  env: EnvInput!
  mic: MicInput!
  light: LightInput!
  move: MoveInput!
  system: SystemInput!
}

input EnvInput {
  env_hmax2: Int!
  env_hmax1: Int!
  env_alarm1_flag: Int!
  env_tmax1: Int!
  env_tmin1: Int!
  env_tmax2: Int!
  env_hmin2: Int!
  env_rap_limit: Int!
  env_ivl: Int!
  env_tmin2: Int!
  env_hmin1: Int!
}

input MicInput {
  mic_alarm1_flag: Int!
  mic_lvl2: Int!
  mic_lvl1: Int!
  mic_alarm2_flag: Int!
  mic_time2: Int!
  mic_time1: Int!
  mic_rap_limit: Int!
  mic_al1_set: Int!
  mic_al1_flag: Int!
  mic_ivl: Int!
  mic_al2_flag: Int!
}

input LightInput {
  light_ivl: Int!
  light_rap_limit: Int!
}

input MoveInput {
  move_async_rep: Int!
  move_min_time: Int!
  move_ivl: Int!
  move_rap_limit: Int!
}

input SystemInput {
  led_light1: Int!
  buzz_vol1: Int!
  heartbeat_ivl: Int!
  pwr_mode: Int!
  buzz_vol2: Int!
  led_time1: Int!
  wifi_mode: Int!
  buzz_time1: Int!
  led_time2: Int!
  led_light2: Int!
  buzz_time2: Int!
}

input AssignDeviceLocationInput {
  deviceId: String!
  locationId: String!
}

input CreateLocationInput {
  name: String!
  zone: String
  city: String!
  country: String!
  address: String!
  code: String!
}

input UpdateLocationInput {
  name: String
  zone: String
  city: String
  country: String
  address: String
  code: String
  id: String!
}